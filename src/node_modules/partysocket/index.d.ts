import ReconnectingWebSocket, { Options } from 'partysocket/ws';

type Params = Record<string, string>;
type PartySocketOptions = Omit<Options, "constructor"> & {
    id?: string;
    host: string;
    room: string;
    party?: string;
    protocol?: string;
    protocols?: string[];
    query?: Params | (() => Params | Promise<Params>);
};
declare class PartySocket extends ReconnectingWebSocket {
    readonly partySocketOptions: PartySocketOptions;
    _pk: string;
    _pkurl: string;
    name: string;
    room: string;
    host: string;
    constructor(partySocketOptions: PartySocketOptions);
    get id(): string;
    /**
     * Exposes the static PartyKit room URL without applying query parameters.
     * To access the currently connected WebSocket url, use PartySocket#url.
     */
    get roomUrl(): string;
}

export { PartySocketOptions, ReconnectingWebSocket as WebSocket, PartySocket as default };
